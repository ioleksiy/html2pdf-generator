name: Docker

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      puppeteer_version:
        description: 'Puppeteer version to use (e.g., 21.3.6)'
        required: true
        default: 'latest'
  schedule:
    # Run once a week on Sunday at midnight
    - cron: '0 0 * * 0'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ioleksiy/html2pdf-generator

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Puppeteer version
        id: puppeteer-version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "PUPPETEER_VERSION=${{ github.event.inputs.puppeteer_version }}" >> $GITHUB_ENV
          else
            PUPPETEER_VERSION=$(grep -oP '(?<="puppeteer": "\^?)[0-9]+\.[0-9]+\.[0-9]+' package.json || echo "latest")
            echo "PUPPETEER_VERSION=$PUPPETEER_VERSION" >> $GITHUB_ENV
          fi
          
          # For scheduled builds, check if we need to update
          if [ "${{ github.event_name }}" = "schedule" ]; then
            LATEST_TAG=$(curl -s https://registry.hub.docker.com/v2/repositories/ioleksiy/html2pdf-generator/tags | jq -r '.results[] | select(.name | test("^[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name' | sort -V | tail -n 1 || echo "")
            
            if [ -n "$LATEST_TAG" ] && [ "$LATEST_TAG" = "$PUPPETEER_VERSION" ]; then
              echo "No new version of Puppeteer available. Current: $PUPPETEER_VERSION"
              echo "SHOULD_BUILD=false" >> $GITHUB_ENV
              exit 0
            fi
            echo "New version available or first build. Building for Puppeteer $PUPPETEER_VERSION"
          fi
          
          echo "SHOULD_BUILD=true" >> $GITHUB_ENV

      - name: Build and push
        if: env.SHOULD_BUILD == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            PUPPETEER_VERSION=${{ env.PUPPETEER_VERSION }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.PUPPETEER_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub Release
        if: github.event_name == 'push' && env.SHOULD_BUILD == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.PUPPETEER_VERSION }}
          tag_name: v${{ env.PUPPETER_VERSION }}
          body: |
            Puppeteer version: ${{ env.PUPPETEER_VERSION }}
            
            ```sh
            docker pull ioleksiy/html2pdf-generator:${{ env.PUPPETEER_VERSION }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
